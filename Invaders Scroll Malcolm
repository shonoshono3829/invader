import tkinter as tk

# ------------------ GUI class and methods ----------------

class Main:

    def __init__(self):
        self.mainWin = tk.Tk()

        self.canvas = tk.Canvas(self.mainWin, width=640, height=800, bg="black")
        self.canvas.grid(row=0, column=0)

        self.shooter = self.canvas.create_rectangle(0, 0, 40, 20,
                                                    fill="lightgreen")
        self.canvas.move(self.shooter, 320, 700)

        # Shooter Move Controls
        self.mainWin.bind("<a>", self.moveCallback)
        self.mainWin.bind("<d>", self.moveCallback)
        self.mainWin.bind("<Left>", self.moveCallback)
        self.mainWin.bind("<Right>", self.moveCallback)

        # Shooter Laser Controls
        self.laser = self.canvas.create_rectangle(0, 0, 5, 20, fill="lightgreen")

        self.mainWin.bind("<Return>", self.laserCallback)

        # Invaders
        self.invader1 = self.canvas.create_rectangle((10, 30), (30, 50), fill="red", tag="1")
        self.invader2 = self.canvas.create_rectangle((70, 30), (90, 50), fill="red", tag="2")
        self.invader3 = self.canvas.create_rectangle((130, 30), (150, 50), fill="red", tag="3")
        self.invader4 = self.canvas.create_rectangle((190, 30), (210, 50), fill="red", tag="4")
        self.invader5 = self.canvas.create_rectangle((250, 30), (270, 50), fill="red", tag="5")
        self.invader6 = self.canvas.create_rectangle((310, 30), (330, 50), fill="red", tag="6")

        self.aliveInvaders = [self.invader1, self.invader2, self.invader3, self.invader4, self.invader5, self.invader6]
        self.deadInvaders = []

        self.game = 0

        self.invaderMove()

    def moveCallback(self, event):
        (x1, y1, x2, y2) = self.canvas.coords(self.shooter)

        if x1 > 0 and event.keysym == "a":
            self.canvas.move(self.shooter, -10, 0)  # Max 28 steps to the right
        elif x2 < 640 and event.keysym == "d":
            self.canvas.move(self.shooter, 10, 0)   # Max 32 steps to the left
        elif x1 > 0 and event.keysym == "Left":
            self.canvas.move(self.shooter, -10, 0)
        elif x2 < 640 and event.keysym == "Right":
            self.canvas.move(self.shooter, 10, 0)
        else:
            pass

    def laserCallback(self, event):
        if event.keysym == "Return":
            self.mainWin.after_cancel(self.laserAuto())
            self.canvas.delete(self.laser)
            (x1, y1, x2, y2) = self.canvas.coords(self.shooter)
            laserInit = (x1 + x2) / 2
            self.laser = self.canvas.create_rectangle(0, 0, 5, 20, fill="lightgreen")
            self.canvas.move(self.laser, laserInit, y1)
            self.laserAuto()


    # I tried to fix this, the laser gets faster and faster because after function has no after.cancel method. I couldn't fix.
    def laserAuto(self):
        self.canvas.move(self.laser, 0, -10)
        t1 = self.mainWin.after(100, self.laserAuto)
        return t1
    
    # This move function moves the entire row of invaders, it's pretty cool
    def invaderMove(self):
        for i in self.aliveInvaders:
            self.canvas.move(i, 10, 0)
            (x1, y1, x2, y2) = self.canvas.coords(i)
            startx = 10
            startx1 = 30
            index = self.aliveInvaders.index(i)
            if x1 >= 640:
                self.aliveInvaders[index] = self.canvas.create_rectangle((startx, (y1+100), (startx1, (y2 + 100))), fill="red", tag="1")

        self.canvas.after(150, self.invaderMove)



    def run(self):
        self.mainWin.mainloop()

    def exit(self):
        self.mainWin.destroy()

# ------------------ Main program ----------------------

myGui = Main()
myGui.run()
