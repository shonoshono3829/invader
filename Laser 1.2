import tkinter as tk

# ------------------ GUI class and methods ----------------

class Main:

    def __init__(self):
        self.mainWin = tk.Tk()

        self.canvas = tk.Canvas(self.mainWin, width=640, height=800, bg="black")
        self.canvas.grid(row=0, column=0)

        self.shooter = self.canvas.create_rectangle(0, 0, 40, 20,
                                                    fill="lightgreen")

        # Shooter Move Controls
        self.mainWin.bind("<a>", self.moveCallback)
        self.mainWin.bind("<d>", self.moveCallback)
        self.mainWin.bind("<Left>", self.moveCallback)
        self.mainWin.bind("<Right>", self.moveCallback)

        # Shooter Laser Controls
        self.shooterLaser = self.canvas.create_rectangle(0, 0, 5, 20, fill="lightgreen")    # Important. Initial Creation
        self.mainWin.bind("<Return>", self.shooterLaserCallback)



        # Invader Setup
        # self.invader = self.canvas.create_rectangle(0, 0, 20, 20, fill="red")
        # self.canvas.move(self.invader, 320, 100)
        # self.invaderRight()
        # self.invaderLaserSetUp()

    def moveCallback(self, event):
        (x1, y1, x2, y2) = self.canvas.coords(self.shooter)

        if x1 > 0 and event.keysym == "a":
            self.canvas.move(self.shooter, -10, 0)  # Max 28 steps to the right
        elif x2 < 640 and event.keysym == "d":
            self.canvas.move(self.shooter, 10, 0)   # Max 32 steps to the left
        elif x1 > 0 and event.keysym == "Left":
            self.canvas.move(self.shooter, -10, 0)
        elif x2 < 640 and event.keysym == "Right":
            self.canvas.move(self.shooter, 10, 0)
        else:
            pass

    def shooterLaserCallback(self, event):
        if event.keysym == "Return":
            self.canvas.delete(self.shooterLaser)
            (x1, y1, x2, y2) = self.canvas.coords(self.shooter)
            shooterLaserInit = (x1 + x2) / 2
            self.shooterLaser = self.canvas.create_rectangle(0, 0, 5, 20, fill="lightgreen")
            self.canvas.move(self.shooterLaser, shooterLaserInit, y1)
        self.shooterLaserAuto()

    def shooterLaserAuto(self):
        (x1, y1, x2, y2) = self.canvas.coords(self.shooterLaser)
        if y2 > 0:
            self.canvas.move(self.shooterLaser, 0, -10)
            delay = 50
            self.mainWin.after(delay, self.shooterLaserAuto)
        # if y2 == 0:
            # reload = True

    # def invaderRight(self):
    #     (x1, y1, x2, y2) = self.canvas.coords(self.invader)
    #     self.canvas.move(self.invader, 10, 0)
    #     delay = 50
    #     self.mainWin.after(delay, self.invaderRight)
    #     if x2 == 640:
    #         self.invaderLeft()
    #
    # def invaderLeft(self):
    #     (x1, y1, x2, y2) = self.canvas.coords(self.invader)
    #     self.canvas.move(self.invader, -10, 0)
    #     delay = 50
    #     self.mainWin.after(delay, self.invaderLeft)
    #     if x1 == 0:
    #         self.invaderRight()
    #
    # def invaderLaserSetUp(self):
    #     self.invaderLaserCallback()
    #     delay = 250
    #     self.mainWin.after(delay, self.invaderLaserCallback)
    #
    # def invaderLaserCallback(self):
    #     (x1, y1, x2, y2) = self.canvas.coords(self.invader)
    #     invaderLaserInit = (x1 + x2) / 2
    #     self.invaderLaser = self.canvas.create_rectangle(0, 0, 5, 20, fill="red")
    #     self.canvas.move(self.invaderLaser, invaderLaserInit, y1)
    #     self.invaderLaserAuto()
    #
    # def invaderLaserAuto(self):
    #     self.canvas.move(self.invaderLaser, 0, 10)
    #     delay = 50
    #     self.mainWin.after(delay, self.invaderLaserAuto)

    def run(self):
        self.canvas.move(self.shooter, 320, 700)
        self.mainWin.mainloop()
# ------------------ Main program ----------------------

myGui = Main()
myGui.run()
